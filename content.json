{"meta":{"title":"小熊孩子","subtitle":"心之所向，必是吾灵魂归处！  ——风神大 D","description":"pads C语言 Linux 单片机","author":"风神大 D","url":"https://dongzf.work"},"pages":[{"title":"","date":"2018-07-03T00:48:19.538Z","updated":"2018-07-03T00:48:19.538Z","comments":true,"path":"baidu_verify_NInwkrLvcI.html","permalink":"https://dongzf.work/baidu_verify_NInwkrLvcI.html","excerpt":"","text":"NInwkrLvcI"},{"title":"about","date":"2018-06-29T06:50:31.000Z","updated":"2018-07-02T07:42:35.899Z","comments":true,"path":"about/index.html","permalink":"https://dongzf.work/about/index.html","excerpt":"","text":""},{"title":"hardware","date":"2018-06-29T06:50:09.000Z","updated":"2018-07-02T07:40:28.612Z","comments":true,"path":"hardware/index.html","permalink":"https://dongzf.work/hardware/index.html","excerpt":"","text":""},{"title":"instant","date":"2018-06-29T06:42:49.000Z","updated":"2018-06-29T07:18:02.228Z","comments":false,"path":"instant/index.html","permalink":"https://dongzf.work/instant/index.html","excerpt":"","text":""},{"title":"product","date":"2018-07-02T09:46:00.000Z","updated":"2018-07-02T09:46:00.738Z","comments":true,"path":"product/index.html","permalink":"https://dongzf.work/product/index.html","excerpt":"","text":""},{"title":"life","date":"2018-06-29T06:49:47.000Z","updated":"2018-07-02T07:43:58.958Z","comments":true,"path":"life/index.html","permalink":"https://dongzf.work/life/index.html","excerpt":"","text":""},{"title":"software","date":"2018-06-29T06:50:22.000Z","updated":"2018-07-02T09:43:52.640Z","comments":true,"path":"software/index.html","permalink":"https://dongzf.work/software/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"需求收集","date":"2019-10-12T03:15:49.624Z","updated":"2019-02-22T06:08:34.362Z","comments":true,"path":"2019/10/12/需求收集/","link":"","permalink":"https://dongzf.work/2019/10/12/需求收集/","excerpt":"","text":"问题整理运营商选择（20190221） 部分地区无法覆盖联通网络，会导致ESIM网络故障高，无法与平台同步解决方法 采用eSIM与普通SIM卡兼容设计，默认使用eSIM，在联通4g无法覆盖的网络采用SIM卡选择其它运营商 wifi网络需求（20190222） 部分地区有采用wifi的需求，因为现场有wifi网络，不想使用4g后续支持wifi网络模组，此处建议采用乐鑫方案，集中于软件业务开发，硬件采用开源的成熟方案","categories":[],"tags":[]},{"title":"Welcome","slug":"welcome","date":"2019-10-12T03:15:49.561Z","updated":"2018-07-02T09:47:50.990Z","comments":true,"path":"2019/10/12/welcome/","link":"","permalink":"https://dongzf.work/2019/10/12/welcome/","excerpt":"","text":"Welcome to my blog!","categories":[{"name":"about","slug":"about","permalink":"https://dongzf.work/categories/about/"}],"tags":[]},{"title":"","slug":"MCC-WD组装说明","date":"2019-10-12T03:15:49.509Z","updated":"2019-03-21T06:13:30.286Z","comments":true,"path":"2019/10/12/MCC-WD组装说明/","link":"","permalink":"https://dongzf.work/2019/10/12/MCC-WD组装说明/","excerpt":"","text":"MCC-WD 组装测试说明书 PCBA测试 PCBA测试准备 名称 说明 备注 主板 MCC-WD 底板 无 核心模组 MCC-WD 安卓核心板 无 4G模组 EC20 无 zigbee模组 MCC-WD-MOD-ZIG 无 4g天线 外置天线 无 zigbee天线 外置天线 无 直流电源 20V/2A 直流电源 无 HDMI线 用于测试链接显示器 无 鼠标 用于设置参数 无 电脑 用于配置参数 无 U盘 用于测试OTG U盘功能 无 HDMI显示器 用于显示MCC-WD界面 无 PCBA固件烧录 准备：PCBA microUSB线 烧录固件版本 PC PCBA网络设置 PCBA功能测试 MCC-WD ID存储 生产条形码，铭牌 PCBA 导热灌封硅胶局部喷涂 zigbee 模组参数设置 产品全功能测试MCC-WD组装注意事项 PCBA 拨码开关固定 侧挡板天线螺栓固定 天线安装 接口固定 PCBA 安装 产品固定安装 产品老化测试产品封箱","categories":[],"tags":[]},{"title":"","slug":"MCC-WD组装说明","date":"2019-10-12T03:15:49.492Z","updated":"2019-03-11T09:03:58.895Z","comments":true,"path":"2019/10/12/MCC-WD组装说明/","link":"","permalink":"https://dongzf.work/2019/10/12/MCC-WD组装说明/","excerpt":"","text":"MCC-WD&#x7EC4;&#x88C5;&#x8BF4;&#x660E; /** * prism.js Github theme based on GitHub's theme. * @author Sam Clarke */ code[class*=\"language-\"], pre[class*=\"language-\"] { color: #333; background: none; font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; word-wrap: normal; line-height: 1.4; -moz-tab-size: 8; -o-tab-size: 8; tab-size: 8; -webkit-hyphens: none; -moz-hyphens: none; -ms-hyphens: none; hyphens: none; } /* Code blocks */ pre[class*=\"language-\"] { padding: .8em; overflow: auto; /* border: 1px solid #ddd; */ border-radius: 3px; /* background: #fff; */ background: #f5f5f5; } /* Inline code */ :not(pre) > code[class*=\"language-\"] { padding: .1em; border-radius: .3em; white-space: normal; background: #f5f5f5; } .token.comment, .token.blockquote { color: #969896; } .token.cdata { color: #183691; } .token.doctype, .token.punctuation, .token.variable, .token.macro.property { color: #333; } .token.operator, .token.important, .token.keyword, .token.rule, .token.builtin { color: #a71d5d; } .token.string, .token.url, .token.regex, .token.attr-value { color: #183691; } .token.property, .token.number, .token.boolean, .token.entity, .token.atrule, .token.constant, .token.symbol, .token.command, .token.code { color: #0086b3; } .token.tag, .token.selector, .token.prolog { color: #63a35c; } .token.function, .token.namespace, .token.pseudo-element, .token.class, .token.class-name, .token.pseudo-class, .token.id, .token.url-reference .token.variable, .token.attr-name { color: #795da3; } .token.entity { cursor: help; } .token.title, .token.title .token.punctuation { font-weight: bold; color: #1d3e81; } .token.list { color: #ed6a43; } .token.inserted { background-color: #eaffea; color: #55a532; } .token.deleted { background-color: #ffecec; color: #bd2c00; } .token.bold { font-weight: bold; } .token.italic { font-style: italic; } /* JSON */ .language-json .token.property { color: #183691; } .language-markup .token.tag .token.punctuation { color: #333; } /* CSS */ code.language-css, .language-css .token.function { color: #0086b3; } /* YAML */ .language-yaml .token.atrule { color: #63a35c; } code.language-yaml { color: #183691; } /* Ruby */ .language-ruby .token.function { color: #333; } /* Markdown */ .language-markdown .token.url { color: #795da3; } /* Makefile */ .language-makefile .token.symbol { color: #795da3; } .language-makefile .token.variable { color: #183691; } .language-makefile .token.builtin { color: #0086b3; } /* Bash */ .language-bash .token.keyword { color: #0086b3; } /* highlight */ pre[data-line] { position: relative; padding: 1em 0 1em 3em; } pre[data-line] .line-highlight-wrapper { position: absolute; top: 0; left: 0; background-color: transparent; display: block; width: 100%; } pre[data-line] .line-highlight { position: absolute; left: 0; right: 0; padding: inherit 0; margin-top: 1em; background: hsla(24, 20%, 50%,.08); background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0)); pointer-events: none; line-height: inherit; white-space: pre; } pre[data-line] .line-highlight:before, pre[data-line] .line-highlight[data-end]:after { content: attr(data-start); position: absolute; top: .4em; left: .6em; min-width: 1em; padding: 0 .5em; background-color: hsla(24, 20%, 50%,.4); color: hsl(24, 20%, 95%); font: bold 65%/1.5 sans-serif; text-align: center; vertical-align: .3em; border-radius: 999px; text-shadow: none; box-shadow: 0 1px white; } pre[data-line] .line-highlight[data-end]:after { content: attr(data-end); top: auto; bottom: .4em; }html body{font-family:\"Helvetica Neue\",Helvetica,\"Segoe UI\",Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ul,html body>ol{margin-bottom:16px}html body ul,html body ol{padding-left:2em}html body ul.no-list,html body ol.no-list{padding:0;list-style-type:none}html body ul ul,html body ul ol,html body ol ol,html body ol ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:bold;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em !important;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::before,html body code::after{letter-spacing:-0.2em;content:\"\\00a0\"}html body pre>code{padding:0;margin:0;font-size:.85em !important;word-break:normal;white-space:pre;background:transparent;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;font-size:.85em !important;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:before,html body pre tt:before,html body pre code:after,html body pre tt:after{content:normal}html body p,html body blockquote,html body ul,html body ol,html body dl,html body pre{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body pre,html body code{word-wrap:break-word;white-space:pre}}.markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview .pagebreak,.markdown-preview .newpage{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center !important}.markdown-preview:not([for=\"preview\"]) .code-chunk .btn-group{display:none}.markdown-preview:not([for=\"preview\"]) .code-chunk .status{display:none}.markdown-preview:not([for=\"preview\"]) .code-chunk .output-div{margin-bottom:16px}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for=\"html-export\"]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for=\"html-export\"]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0}@media screen and (min-width:914px){html body[for=\"html-export\"]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px)}}@media screen and (max-width:914px){html body[for=\"html-export\"]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for=\"html-export\"]:not([data-presentation-mode]) .markdown-preview{font-size:14px !important;padding:1em}}@media print{html body[for=\"html-export\"]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for=\"html-export\"]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,0.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{padding:0 1.6em;margin-top:.8em}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc li{margin-bottom:.8em}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{list-style-type:none}html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% - 300px);padding:2em calc(50% - 457px - 150px);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for=\"html-export\"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for=\"html-export\"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for=\"html-export\"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none} /* Please visit the URL below for more information: */ /* https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */ MCC-WD &#x7EC4;&#x88C5;&#x6D4B;&#x8BD5;&#x8BF4;&#x660E;&#x4E66; PCBA&#x6D4B;&#x8BD5; PCBA&#x6D4B;&#x8BD5;&#x51C6;&#x5907; &#x540D;&#x79F0; &#x8BF4;&#x660E; &#x5907;&#x6CE8; &#x4E3B;&#x677F; MCC-WD &#x5E95;&#x677F; &#x65E0; &#x6838;&#x5FC3;&#x6A21;&#x7EC4; MCC-WD &#x5B89;&#x5353;&#x6838;&#x5FC3;&#x677F; &#x65E0; 4G&#x6A21;&#x7EC4; EC20 &#x65E0; zigbee&#x6A21;&#x7EC4; MCC-WD-MOD-ZIG &#x65E0; 4g&#x5929;&#x7EBF; &#x5916;&#x7F6E;&#x5929;&#x7EBF; &#x65E0; zigbee&#x5929;&#x7EBF; &#x5916;&#x7F6E;&#x5929;&#x7EBF; &#x65E0; &#x76F4;&#x6D41;&#x7535;&#x6E90; 20V/2A &#x76F4;&#x6D41;&#x7535;&#x6E90; &#x65E0; HDMI&#x7EBF; &#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x94FE;&#x63A5;&#x663E;&#x793A;&#x5668; &#x65E0; &#x9F20;&#x6807; &#x7528;&#x4E8E;&#x8BBE;&#x7F6E;&#x53C2;&#x6570; &#x65E0; &#x7535;&#x8111; &#x7528;&#x4E8E;&#x914D;&#x7F6E;&#x53C2;&#x6570; &#x65E0; U&#x76D8; &#x7528;&#x4E8E;&#x6D4B;&#x8BD5;OTG U&#x76D8;&#x529F;&#x80FD; &#x65E0; HDMI&#x663E;&#x793A;&#x5668; &#x7528;&#x4E8E;&#x663E;&#x793A;MCC-WD&#x754C;&#x9762; &#x65E0; PCBA&#x56FA;&#x4EF6;&#x70E7;&#x5F55; &#x51C6;&#x5907;&#xFF1A;PCBA microUSB&#x7EBF; &#x70E7;&#x5F55;&#x56FA;&#x4EF6;&#x7248;&#x672C; PC PCBA &#x62E8;&#x7801;&#x5F00;&#x5173;&#x8BBE;&#x7F6E; &#x5DE6;&#x4FA7; &#x4E2D;&#x95F4; &#x53F3;&#x4FA7; &#x8BF4;&#x660E; 1 ON 1 &#x4E0A;&#x7535;&#x8FD0;&#x884C;&#x5B89;&#x5353;&#x7CFB;&#x7EDF; 1 1 ON &#x4E0A;&#x7535;&#x8FDB;&#x5165;&#x70E7;&#x5F55;&#x955C;&#x50CF;&#x6A21;&#x5F0F; 1-&gt;ON-&gt;1 &#x590D;&#x4F4D;&#x7CFB;&#x7EDF;&#x529F;&#x80FD;&#xFF08;&#x786C;&#x4EF6;&#x590D;&#x4F4D;&#xFF09; &#x590D;&#x4F4D;&#x8BF4;&#x660E; &#x590D;&#x4F4D;&#x9700;&#x8981;&#x5C06;&#x53F3;&#x4FA7;&#x62E8;&#x7801;&#x5F00;&#x5173;&#x62E8;&#x81F3;ON&#x5E76;&#x4E14;&#x518D;&#x6B21;&#x62E8;&#x56DE;1&#xFF1B; &#x6B64;&#x5904;&#x62E8;&#x7801;&#x5F00;&#x5173;&#x4EC5;&#x5171;&#x7814;&#x53D1;&#x751F;&#x4EA7;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x63A8;&#x8350;&#x5BA2;&#x6237;&#x4F7F;&#x7528;&#xFF1B; &#x70E7;&#x5F55; &#x5C06;PCBA&#x8BBE;&#x7F6E;&#x4E3A;&#x70E7;&#x5F55;&#x955C;&#x50CF;&#x6A21;&#x5F0F;&#xFF0C;&#x5E76;&#x4E14;&#x7528;MIRCO USB&#x7EBF;&#x94FE;&#x63A5;&#x81F3;PC&#xFF0C;&#x6253;&#x5F00;mfgtools &#x6253;&#x5F00;&#x70E7;&#x5F55;&#x8F6F;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x70B9;&#x51FB;start&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x6B64;&#x65F6;&#x4F7F;&#x7528;&#x786C;&#x4EF6;&#x590D;&#x4F4D;&#xFF0C;&#x8F6F;&#x4EF6;&#x5F00;&#x59CB;&#x70E7;&#x5F55;&#xFF1B; &#x70E7;&#x5F55;&#x5B8C;&#x6BD5;&#x540E;&#x8FDB;&#x5EA6;&#x6761;&#x4F1A;&#x53D8;&#x4E3A;&#x7EFF;&#x8272;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x70B9;&#x51FB;STOP&#x6309;&#x952E;&#xFF0C;&#x5E76;&#x4E14;&#x70B9;&#x51FB;exit&#xFF0C;&#x81F3;&#x6B64;&#xFF0C;&#x5B89;&#x5353;&#x955C;&#x50CF;&#x70E7;&#x5F55;&#x6210;&#x529F;&#xFF1B; PCBA&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E; PCBA&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x8BBE;&#x7F6E;4g &#x7684;&#x63A5;&#x5165;&#x70B9;&#xFF0C;&#x53CA;APN &#x5177;&#x4F53;&#x5982;&#x4E0B; &#x8FDB;&#x5165;&#x79FB;&#x52A8;&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E;&#xFF0C;&#x9009;&#x62E9;&#x201C;&#x63A5;&#x5165;&#x70B9;&#x540D;&#x79F0;&#x201D; &#x8FDB;&#x5165;APN&#x6DFB;&#x52A0;&#x754C;&#x9762;&#x540E;&#xFF0C;&#x9009;&#x62E9;&#x53F3;&#x4E0A;&#x89D2;&#x201C;+&#x201D;&#xFF0C;&#x8FDB;&#x5165;&#x81EA;&#x5B9A;&#x4E49;APN &#x8FDB;&#x5165;&#x4FEE;&#x6539;&#x63A5;&#x5165;&#x70B9;&#x754C;&#x9762;&#x540E;&#xFF0C;&#x6DFB;&#x52A0;&#x540D;&#x79F0;&#x201C;unicom&#x201D; &#x6DFB;&#x52A0;APN&#x201C;3gnet&#x201D;&#xFF0C;&#x70B9;&#x51FB;&#x53F3;&#x4E0A;&#x89D2;&#x9009;&#x62E9;&#x4FDD;&#x5B58;&#x5373;&#x53EF;&#xFF1B; PCBA&#x529F;&#x80FD;&#x6D4B;&#x8BD5; 4g&#x4E0A;&#x7F51;&#x529F;&#x80FD;&#xFF1B; wifi&#x529F;&#x80FD;&#xFF08;&#x4E0A;&#x7F51;&#x4E0E;AP&#x70ED;&#x70B9;&#xFF09;&#xFF1B; &#x97F3;&#x9891;&#xFF08;&#x64AD;&#x653E;&#x97F3;&#x4E50;&#xFF0C;&#x8033;&#x673A;&#x53E3;&#x63A5;&#x5165;&#x97F3;&#x9891;&#xFF0C;&#x6D4B;&#x8BD5;&#x58F0;&#x97F3;&#x662F;&#x5426;&#x6709;&#x5F02;&#x5E38;&#xFF09;&#xFF1B; PCBA&#x7535;&#x6D41;&#x662F;&#x5426;&#x5F02;&#x5E38;&#xFF08;PCBA&#x6D4B;&#x8BD5;&#x4E00;&#x5F8B;&#x4F7F;&#x7528;&#x76F4;&#x6D41;&#x7535;&#x6E90;&#x6D4B;&#x8BD5;&#xFF09;&#xFF1B; MCC-WD ID&#x5B58;&#x50A8; &#x751F;&#x4EA7;&#x6761;&#x5F62;&#x7801;&#xFF0C;&#x94ED;&#x724C; ID&#x751F;&#x6210;&#xFF0C;&#x8BBE;&#x5907;ID&#x662F;&#x8BFB;&#x53D6;CPU&#x5E8F;&#x5217;&#x53F7;&#xFF0C;&#x8BBE;&#x5907;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;&#x5E8F;&#x5217;&#x53F7;&#x8F6F;&#x4EF6;&#x76F4;&#x63A5;&#x8BFB;&#x53D6;&#xFF1B; &#x6B64;ID&#x9700;&#x8981;&#x5BFC;&#x5165;&#x5230;&#x5E7F;&#x8054;&#x8FBE;&#x52B3;&#x52A1;&#x4E91;&#x5E73;&#x53F0;&#xFF0C;&#x5E76;&#x4E14;&#x751F;&#x6210;&#x6761;&#x5F62;&#x7801;&#x6216;&#x8005;&#x5728;&#x94ED;&#x724C;&#x4E0A;&#x4E1D;&#x5370;&#x7C98;&#x8D34;&#xFF1B; PCBA &#x5BFC;&#x70ED;&#x704C;&#x5C01;&#x7845;&#x80F6;&#x5C40;&#x90E8;&#x55B7;&#x6D82; &#x5982;&#x56FE;&#x6240;&#x793A;&#xFF0C;PCBA&#x90E8;&#x5206;&#x533A;&#x57DF;&#x4F7F;&#x7528;&#x7845;&#x80F6;&#x55B7;&#x6D82; zigbee &#x6A21;&#x7EC4;&#x53C2;&#x6570;&#x8BBE;&#x7F6E; zigbee &#x6A21;&#x7EC4;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x5C06;zigbee&#x6A21;&#x7EC4; &#x5DE5;&#x4F5C;&#x6A21;&#x5F0F;&#x66F4;&#x6539;&#x4E3A;&#x63A5;&#x6536;&#x6A21;&#x5F0F;&#xFF0C;&#x5DF2;&#x7ECF;&#x76F8;&#x5E94;&#x7684;&#x901A;&#x9053; ID&#x6309;&#x7167;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x5373;&#x53EF;&#xFF1B; &#x4EA7;&#x54C1;&#x5168;&#x529F;&#x80FD;&#x6D4B;&#x8BD5; &#x5728;&#x4EE5;&#x4E0A;&#x6D4B;&#x8BD5;&#x5168;&#x90E8;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x6A21;&#x62DF;&#x6700;&#x7EC8;&#x4EA7;&#x54C1;&#x6D4B;&#x8BD5;&#xFF0C;&#x6D4B;&#x8BD5;&#x524D;&#x9700;&#x8981;&#x5C06;&#x4EA7;&#x54C1;ID&#xFF08;CPU&#x5E8F;&#x5217;&#x53F7;&#xFF09;&#x5BFC;&#x5165;&#x5230;&#x5E73;&#x53F0;&#xFF0C;&#x7136;&#x540E;&#x4E0A;&#x7535;&#xFF0C;&#x5E73;&#x53F0;APP&#x4F1A;&#x81EA;&#x52A8;&#x542F;&#x52A8;&#xFF0C;&#x8054;&#x7F51;&#xFF0C;&#x5E76;&#x4E14;&#x5F00;&#x59CB;&#x8DD1;&#x6574;&#x4E2A;&#x4E1A;&#x52A1;&#xFF1B; &#x4F7F;&#x7528;zigbee&#x6A21;&#x5757;&#x6A21;&#x62DF;&#x4EBA;&#x5458;&#x901A;&#x8FC7;&#x6570;&#x636E;&#x53D1;&#x9001;&#x81F3;&#x8BBE;&#x5907;&#xFF0C;&#x5373;&#x53EF;&#x770B;&#x5230;&#x7531;&#x4EBA;&#x5458;&#x7ECF;&#x8FC7;&#x7684;&#x4FE1;&#x606F;&#x663E;&#x793A;&#x5728;&#x5927;&#x5C4F;&#x4E0A; &#x5927;&#x5C4F;&#x663E;&#x793A;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E3B;&#x8981;&#x80FD;&#x786E;&#x8BA4;&#x5927;&#x5C4F;&#x63A7;&#x5236;&#x7AEF;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x63A5;&#x6536;&#x4FE1;&#x53F7;&#x5373;&#x53EF;&#xFF1B; MCC-WD&#x7EC4;&#x88C5;&#x6CE8;&#x610F;&#x4E8B;&#x9879; PCBA &#x62E8;&#x7801;&#x5F00;&#x5173;&#x56FA;&#x5B9A; &#x62E8;&#x7801;&#x5F00;&#x5173;&#x5E95;&#x90E8;&#x4F7F;&#x7528;&#x53CC;&#x9762;&#x80F6;&#x7C98;&#x8FDE;&#x56FA;&#x5B9A;&#xFF1B; &#x4FA7;&#x6321;&#x677F;&#x5929;&#x7EBF;&#x87BA;&#x6813;&#x56FA;&#x5B9A; &#x5929;&#x7EBF;&#x87BA;&#x6813;&#x56FA;&#x5B9A;&#x5FC5;&#x987B;&#x62E7;&#x7D27;&#xFF0C;&#x786E;&#x4FDD;&#x4E0D;&#x4F1A;&#x6643;&#x52A8;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x6EB6;&#x80F6;&#x6D82;&#x5C42; &#x5929;&#x7EBF;&#x5B89;&#x88C5; &#x63A5;&#x53E3;&#x56FA;&#x5B9A; &#x5929;&#x7EBF;&#x63A5;&#x53E3;&#x5168;&#x90E8;&#x91C7;&#x7528;EVA&#x6CE1;&#x68C9;&#x56FA;&#x5B9A;&#xFF1B; PCBA &#x5B89;&#x88C5; &#x5916;&#x58F3;&#x4F7F;&#x7528;&#x8F68;&#x9053;&#x627F;&#x8F7D;PCBA&#xFF0C;&#x76F4;&#x63A5;&#x63A8;&#x5165;&#x5373;&#x53EF;&#xFF1B; &#x4EA7;&#x54C1;&#x56FA;&#x5B9A;&#x5B89;&#x88C5; &#x4EA7;&#x54C1;&#x87BA;&#x9489;&#x56FA;&#x5B9A;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x9632;&#x6B62;&#x635F;&#x574F;PCBA&#xFF1B; &#x4EA7;&#x54C1;&#x8001;&#x5316;&#x6D4B;&#x8BD5; 1. &#x7EC4;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;72&#x5C0F;&#x65F6;&#x8FDE;&#x7EED;&#x6D4B;&#x8BD5;&#x5373;&#x53EF;&#xFF1B; &#x4EA7;&#x54C1;&#x5C01;&#x7BB1; 1. &#x7CBE;&#x7B80;&#x5305;&#x88C5;&#xFF0C;&#x7C98;&#x8D34;&#x8BBE;&#x5907;&#x5E8F;&#x5217;&#x53F7; &#x94ED;&#x724C;&#x5373;&#x53EF;&#xFF0C;&#x5185;&#x90E8;&#x9700;&#x8981;&#x505A;&#x7F13;&#x51B2;&#x5904;&#x7406;&#xFF1B; MCC-WD &#x7EC4;&#x88C5;&#x6D4B;&#x8BD5;&#x8BF4;&#x660E;&#x4E66; &#x52B3;&#x52A1;&#x4EA7;&#x54C1;&#x90E8; &#x8463;&#x5360;&#x5CF0;","categories":[],"tags":[]},{"title":"","slug":"issue","date":"2019-10-12T03:15:49.441Z","updated":"2018-12-14T12:03:33.062Z","comments":true,"path":"2019/10/12/issue/","link":"","permalink":"https://dongzf.work/2019/10/12/issue/","excerpt":"","text":"生产问题标签生产目前有新安全帽设计，但是未定版，还在打样阶段，需要评估，如果在这时候让吴总那边按照新的安全帽来做标签，会出现两者不匹配的风险，建议安全帽定版在开始设计，当然如果能基本确认新安全帽不会有大变更，不影响标签这块，也可以同步进行； 工地宝生产考虑到多家供应商问题，熊总那边，吴总那边都有少量订单，这里需要明确几个问题，黄总提供的生产资料可以生产的前提下，新的工地宝生产面临两个问题，第一个问题，由于没有原设计资料，他们做测试，售后运维这块，应该能力不足以胜任；第二个问题，工地宝目前依然有些问题，如果后续有优化调整等等，以及软件升级，除了黄总这边继续生产优化的工地宝，其他的没法做到保障，如果有硬件优化，就需要重新提交生产资料，需要黄总提供； 目前生产问题梳理 目前生产订单需要更明确，鹏飞负责跟进生产订单，应该我们这边的所有订单入口就是鹏飞，这样方便管理； 目前关于生产出库售后，建议再明确些，如果遇到技术问题该找谁来跟进，遇到商务问题，下订单，采购，等问题该找谁，这样每块都得指定人，不能像现在，随意抓个就问，没有很清晰的路线； 目前硬件方向问题产品到底是一我们研发为主还是像现在这样？不说利弊，主要是要拍板定方向，如果是我们要做一个软硬件一体的研发团队，那我们一定要自己开始走路，跑步，例如一旦我们设计的标签方案通过，就一定要主推我们的，这样业务或者其他方面支持，都能做到全掌控；目前是存在我们以来外协产品需要走下去，但是我想说的是，这样会持续下去，但是如果我们的目标明确，我们就应该向我们的目标靠拢，负责慢慢的我们软件业务越来越多，产品就会绑死，我们团队依然是个软件业务团队；最后，无论那个方向，都有利有弊，我这边需要一个非常明确的方向，以我们为主导作为目标，还是外协为主，不能说，外协和我们同步走，这是和稀泥的说法，没有结果；物联网随着5g来会爆发，我们需要明确方向，5g正真来了，我们是自研为主，还是与外协捆绑一起走；个人问题很模糊，我不知道我到底哪里说的产品，亦或者事情或者其他会给人留下吹牛诳人的印象，我需要明确，我对我的做事言行负责，我需要大家指出，而不是标签一个人，有些标签无伤大雅，有些标签我也会在意，因为关乎到我为人处事和信誉问题；","categories":[],"tags":[]},{"title":"","slug":"i.mx6_and_build","date":"2019-10-12T03:15:49.402Z","updated":"2019-01-18T05:56:31.625Z","comments":true,"path":"2019/10/12/i.mx6_and_build/","link":"","permalink":"https://dongzf.work/2019/10/12/i.mx6_and_build/","excerpt":"","text":"安卓4.4编译基于i.mx6编译指令1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889source env.sh source build/envsetup.sh lunch okmx6qd_c-eng make clean make -j8 2&gt;&amp;1 | tee build.log ``` ## 编译生成文件 + 路径 ``` android_kk4.4.2_1.0.0/out/target/product/okmx6dq_c ``` + 文件 ``` boot.imgrecovery.imgsystem.imgu-boot-6q.binu-boot-6dl.bin``` ## 单独编译UBOOT + 编译指令 ``` source env.sh source build/envsetup.sh make -C bootable/bootloader/uboot-imx distclean make -C bootable/bootloader/uboot-imx okmx6q_c_android_config //四核编译ubootmake -C bootable/bootloader/uboot-imx -j8 //生成uboot文件``` ## 驱动代码路径 | 设备 | 驱动程序源代码在内核中的位置 | 设备名 ||------------------|---------------------------------------------|----------------------|| 网卡驱动 | drivers/net/fec.c | eth0 || LCD 背光驱动 | drivers/video/backlight/pwm_bl.c | /sys/class/backlight || USB 接口 U 盘 | drivers/usb/storage/ | /dev/sdX || USB 鼠标 | drivers/hid/usbhid/ | /dev/input/mice || USB3G | drivers/usb/serial/ | /dev/ttyUSB* || USB Camera | drivers/media/video/uvc/ | /dev/video2 || SD/micro SD 卡驱动 | drivers/mmc/card/ | /dev/block/mmcblk1pX || EMMC 驱动 | drivers/mmc/ | /dev/block/mmcblk0pX || SATA 驱动 | drivers/ata/ahci_platform.c | /dev/sda* || OV5640 | drivers/media/video/mxc/capture/ov5640.c | /dev/video0 || OV5640_mipi | \"drivers/media/video/mxc/capture/ov5640_mip || i.c\" | /dev/video1 || LVDS | drivers/video/mxc/ldb.c | /dev/fb* || HDMI | drivers/video/mxc_hdmi.c | /dev/fb* || MIPI | Drivers/video/mxc/mxcfb_ek79007_wvga.c | /dev/fb* || LCD FrameBuffer | drivers/video/mxc/mxc_lcdif.c | /dev/fb* || 电容触摸驱动 | drivers/input/touchscreen/ft5x06_ts.c | /dev/input/event* || RTC 实时时钟驱动 | drivers/rtc/rtc-rx8010.c | /dev/rtc0 || SPI 驱动 | drivers/spi/spidev.c | /dev/ || 串口 | drivers/tty/serial/imx.c | /dev/ || 按键驱动 | drivers/input/keyboard/gpio_keys.c | /dev/ttymxc* || 看门狗驱动 | drivers/watchdog/imx2_wdt.c | /dev/watchdog || RS485 驱动 | drivers/tty/serial/imx.c | /dev/ttymxc* || CAN 驱动 | drivers/net/can/flexcan.c | can0 || USB BlueTooth | drivers/bluetooth | || USB WIFI | drivers/net/wireless | wlan0 || 音频驱动 | sound/soc/codec/wm8962.c | /dev/snd/* | ## 更改项 ### 禁用GPS + 具体方法 ```C // 去掉init.rc中的定义diff --git a/device/fsl/sabresd_6dq/init.rc b/device/fsl/sabresd_6dq/init.rcindex 8be2c838c9..ce674ae330 100755--- a/device/fsl/sabresd_6dq/init.rc+++ b/device/fsl/sabresd_6dq/init.rc@@ -23,7 +23,7 @@ on boot symlink /dev/mxs_viim /dev/mxc_mem # Set GPS serial and reset GPIO pin- setprop ro.kernel.android.gps /dev/ttymxc3+ #setprop ro.kernel.android.gps /dev/ttymxc3 #setprop ro.kernel.android.gps /dev/athrnmea #setprop persist.gps.oacmode @f #symlink /dev/ttymxc3 /dev/gpsdevice ``` ```C //禁用GPS编译 mv hardware/imx/libgps-vk/Android.mk hardware/imx/libgps-vk/Android.txtmv hardware/imx/libgps/Android.mk hardware/imx/libgps/Android.txt ``` ```C//清空编译make clean ``` ### 更改视频输出默认FB0 输出HDMI + 具体方法 更改路径 /work/forlinx/bootable/bootloader/uboot-imx/include/configs 123456789101112131415161718192021222324252627282930 更改文件 ``` mx6q_sabresd.h ``` 更改内容 ```C #define LVDS_MODE &quot;ldb_mode=ldb=sin0\\0&quot; #if defined(CONFIG_UBOOT_KERNEL_LVDS) #define MXC_FB0 &quot;mxcfb0=video=mxcfb0:dev=ldb,LDB-WXGA,if=RGB24,bpp=32\\0&quot; #define MXC_FB1 &quot;mxcfb1=video=mxcfb1:dev=hdmi,1920x1080M@60,if=RGB24,bpp=32\\0&quot; #define FB0BASE &quot;fb0base=fb0base=0x27b00000\\0&quot; #define FBMEM &quot;fbmem=fbmem=28M\\0&quot; #define PANEL &quot;panel=LDB-WXGA\\0&quot; #elif defined(CONFIG_UBOOT_KERNEL_MIPI) #define MXC_FB0 &quot;mxcfb0=video=mxcfb0:dev=mipi_dsi,TRULY-EK79007-WVGA,if=RGB24,bpp=32\\0&quot; #define MXC_FB1 &quot;mxcfb1=video=mxcfb1:dev=hdmi,1920x1080M@60,if=RGB24,bpp=32\\0&quot; #define FB0BASE #define FBMEM #define PANEL &quot;panel=TRULY-EK79007-WVGA\\0&quot; #elif defined(CONFIG_UBOOT_KERNEL_LCD) #define MXC_FB0 &quot;mxcfb0=video=mxcfb0:dev=hdmi,1920x1080M@60,if=RGB24,bpp=32\\0&quot; #define MXC_FB1 //&quot;mxcfb1=video=mxcfb1:dev=hdmi,1920x1080M@60,if=RGB24,bpp=32\\0&quot; #define FB0BASE //&quot;fb0base=fb0base=0x27b00000\\0&quot; #define FBMEM //&quot;fbmem=fbmem=28M\\0&quot; #define PANEL //&quot;panel=AT070-WVGA\\0&quot; #endif ``` ### 配置音频芯片晶振为外部晶振 + 具体方法 更改路径 /work/forlinx/bootable/bootloader/uboot-imx/include/configs 12345678910111213141516 更改文件 ``` mx6q_sabresd.h ``` 更改内容 ```C #if defined(BOARD_IS_OKMX6_S2) #define DEFAULT_CODEC &quot;codec_name=audio_codec=wm8962\\0&quot; #else #define DEFAULT_CODEC &quot;codec_name=audio_codec=wm8960-11M\\0&quot; #endif ``` ### 关闭休眠判定 ### 移除锁屏 + 具体方法 更改路径 /work/forlinx/frameworks/base/packages/Keyguard/src/com/android/keyguard 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758更改文件 ``` KeyguardViewMediator.java``` 更改内容```java private boolean mExternallyEnabled = false ```java private void doKeyguardLocked(Bundle options) &#123; // if another app is disabling us, don&apos;t show if (!mExternallyEnabled) &#123; if (DEBUG) Log.d(TAG, &quot;doKeyguard: not showing because externally disabled&quot;); // note: we *should* set mNeedToReshowWhenReenabled=true here, but that makes // for an occasional ugly flicker in this situation: // 1) receive a call with the screen on (no keyguard) or make a call // 2) screen times out // 3) user hits key to turn screen back on // instead, we reenable the keyguard when we know the screen is off and the call // ends (see the broadcast receiver below) // TODO: clean this up when we have better support at the window manager level // for apps that wish to be on top of the keyguard return; &#125; // if the keyguard is already showing, don&apos;t bother if (mKeyguardViewManager.isShowing()) &#123; if (DEBUG) Log.d(TAG, &quot;doKeyguard: not showing because it is already showing&quot;); return; &#125; // if the setup wizard hasn&apos;t run yet, don&apos;t show final boolean requireSim = !SystemProperties.getBoolean(&quot;keyguard.no_require_sim&quot;, false); final boolean provisioned = mUpdateMonitor.isDeviceProvisioned(); final IccCardConstants.State state = mUpdateMonitor.getSimState(); final boolean lockedOrMissing = state.isPinLocked() || ((state == IccCardConstants.State.ABSENT || state == IccCardConstants.State.PERM_DISABLED) &amp;&amp; requireSim); if (!lockedOrMissing &amp;&amp; !provisioned) &#123; if (DEBUG) Log.d(TAG, &quot;doKeyguard: not showing because device isn&apos;t provisioned&quot; + &quot; and the sim is not locked or missing&quot;); return; &#125; if (mUserManager.getUsers(true).size() &lt; 2 &amp;&amp; mLockPatternUtils.isLockScreenDisabled() &amp;&amp; !lockedOrMissing) &#123; if (DEBUG) Log.d(TAG, &quot;doKeyguard: not showing because lockscreen is off&quot;); return; &#125; if (DEBUG) Log.d(TAG, &quot;doKeyguard: showing the lock screen&quot;); + // showLocked(options);&#125;``` 更改路径 /work/forlinx/frameworks/base/packages/SettingsProvider/res/values 1234567更改文件 ``` defaults.xml``` 更改内容```java&lt;bool name=&quot;def_lockscreen_disabled&quot;&gt;true&lt;/bool&gt; 屏蔽开机气泡提示更改路径 12345678910111213141516171819202122232425262728/work/forlinx/frameworks/base/policy/src/com/android/internal/policy/impl``` 更改文件 ``` ImmersiveModeConfirmation.java``` 更改内容 ```java private final class H extends Handler &#123; private static final int SHOW = 0; private static final int HIDE = 1; @Override public void handleMessage(Message msg) &#123; switch(msg.what) &#123; case SHOW: //handleShow((String)msg.obj); break; case HIDE: handleHide(); break; case PANIC: // handlePanic(); break; &#125; &#125;&#125; 修改壁纸 在frameworks中搜索*wallpaper.jpg 文件，全部替换，如果只得默认壁纸目录的最终会导致，重新回复 开启root权限 开启root保护进程 更改路径123456789101112131415161718/work/forlinx/device/fsl/sabresd_6dq``` 更改文件 ``` init.rc``` 更改内容 ```C#add for rooton property:sys.boot_completed=1 su --daemon#end``` + 添加su文件文件编译完毕后在以下目录增加SU文件``` out/target/product/sabresd_6dq/system/xbin/ 再次编译，不要clean 添加自动安装apk1/work/forlinx/android_kk4.4.2_1.0.0/out/target/product/okmx6qd_c/system/app","categories":[],"tags":[]},{"title":"","slug":"blutNRG","date":"2019-10-12T03:15:49.377Z","updated":"2019-04-16T05:49:13.779Z","comments":true,"path":"2019/10/12/blutNRG/","link":"","permalink":"https://dongzf.work/2019/10/12/blutNRG/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"SIM卡与eSIM兼容设计","slug":"关于解决SIM易接触不良，导致网络问题的方法","date":"2019-01-16T03:11:00.000Z","updated":"2019-01-16T03:18:02.688Z","comments":true,"path":"2019/01/16/关于解决SIM易接触不良，导致网络问题的方法/","link":"","permalink":"https://dongzf.work/2019/01/16/关于解决SIM易接触不良，导致网络问题的方法/","excerpt":"","text":"SIM卡SIM卡问题 工地宝一出现SIM卡松动导致网络出现问题，时好时坏，接触不良SIM卡问题解决方案 SIM卡座更换为导航卡座，具体图片如下 有物理导航卡位不存在松动或者弹出的问题 在顶部依然可以使用粘胶加固 SIM卡座改用兼容设计，即可以选择SIM卡座有效，亦可以选择eSIM有效，最好能实现软件切换，不需要硬件上改动； 改进后优势 依然可以使用更稳定可靠的ESIM技术，避免SIM卡带来的困扰； 在其他无法覆盖的区域提供了更多的额灵活性，可以再当地运营商选择SIM接入网络； 目前esim依然还再试点推行，无法选择运营商，由运营商定制，一旦再后续5G建设中，4g网络停用或者不覆盖，我们的网络这块会受到限制，很多投入出去的产品都将无法使用，或者网络不佳，无法为客户提供服务，另外，也无法再进行更换，因为芯片已经焊接再电路板上了，如果改用兼容设计，一旦esim故障或者出问题，我们可以立即改用SIM卡来替代，灵活性非常大；","categories":[{"name":"hardware","slug":"hardware","permalink":"https://dongzf.work/categories/hardware/"}],"tags":[{"name":"-SIMCARD","slug":"SIMCARD","permalink":"https://dongzf.work/tags/SIMCARD/"}]},{"title":"luart 函数定时器使用","slug":"luat_study_timer","date":"2018-12-28T03:25:00.000Z","updated":"2018-12-28T03:31:04.666Z","comments":true,"path":"2018/12/28/luat_study_timer/","link":"","permalink":"https://dongzf.work/2018/12/28/luat_study_timer/","excerpt":"","text":"luart 函数定时器使用 函数原型 sys.timerLoopStart(function() print(&quot;hello&quot;) end,5000) 函数原型 sys.timerStart(sayHello,1000) 函数链接函数链接 pmd.ldoset GPIO使用注意事项 线程延时使用 参考代码1 sys.taskInit(function() while true do print(&quot;ss function test&quot;) sys.wait(1000) -- 挂起1000ms，同理为每隔1000ms运行一次 end end) 参考代码2`function test() while true doprint(&quot;ss function test&quot;) sys.wait(1000) -- 挂起1000ms，同理为每隔1000ms运行一次 endend sys.taskInit(test)` 消息订阅 参考 系统自带订阅消息","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"目标追踪","slug":"openCV_meanshift","date":"2018-12-28T03:25:00.000Z","updated":"2018-12-28T03:31:04.666Z","comments":true,"path":"2018/12/28/openCV_meanshift/","link":"","permalink":"https://dongzf.work/2018/12/28/openCV_meanshift/","excerpt":"","text":"目标追踪#!/usr/bin/python # -*- coding:utf-8 -*- import numpy as np import cv2 as cv cap = cv.VideoCapture(0) # take first frame of the video ret,frame = cap.read() # setup initial location of window r,h,c,w = 250,90,400,125 # simply hardcoded the values track_window = (c,r,w,h) # set up the ROI for tracking roi = frame[r:r+h, c:c+w] hsv_roi = cv.cvtColor(roi, cv.COLOR_BGR2HSV) mask = cv.inRange(hsv_roi, np.array((0., 60.,32.)), np.array((180.,255.,255.))) roi_hist = cv.calcHist([hsv_roi],[0],mask,[180],[0,180]) cv.normalize(roi_hist,roi_hist,0,255,cv.NORM_MINMAX) # Setup the termination criteria, either 10 iteration or move by atleast 1 pt term_crit = ( cv.TERM_CRITERIA_EPS | cv.TERM_CRITERIA_COUNT, 10, 1 ) while(1): ret ,frame = cap.read() if ret == True: hsv = cv.cvtColor(frame, cv.COLOR_BGR2HSV) dst = cv.calcBackProject([hsv],[0],roi_hist,[0,180],1) # apply meanshift to get the new location ret, track_window = cv.meanShift(dst, track_window, term_crit) # Draw it on image x,y,w,h = track_window img2 = cv.rectangle(frame, (x,y), (x+w,y+h), 255,2) cv.imshow('img2',img2) k = cv.waitKey(60) &amp; 0xff if k == 27: break else: cv.imwrite(chr(k)+\".jpg\",img2) else: break cv.destroyAllWindows() cap.release()","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"Django study","slug":"Django_study","date":"2018-12-28T03:25:00.000Z","updated":"2018-12-28T03:31:04.666Z","comments":true,"path":"2018/12/28/Django_study/","link":"","permalink":"https://dongzf.work/2018/12/28/Django_study/","excerpt":"","text":"[TOC] Django studycreating a project123456789101112131415161718192021222324252627282930 django-admin startproject mysite #mysit 网站根目录``` ### 调试 ``` py manage.py runserver py manage.py runserver 8080 py manage.py runserver 0:8000 ``` ## demo-the Polls app + 网站根目录输入如下指令 ``` py manage.py startapp polls ``` ![django_polls_cmd](/images/django_polls_cmd.jpg)![django_polls](/images/django_polls.jpg)### 编辑视图文件 ``` from django.shortcuts import render# Create your views here.def index(request): return HttpResponse(&quot;Hello.world.You&apos;re at index.&quot;) ``` ![django_view_write](/images/django_view_write.jpg) ### 映射URL--&gt;URLconf ![polls_url](/images/polls_url.jpg) ![facereco_url](/images/facereco_url.jpg) + app 添加url索引index + project the root url add app index ### 运行，访问 py manage.py runserver http://localhost:8000/polls/123456789101112+ 需要访问polls文件，直接访问端口，显示not found ## database setup ### sqlite ``` DATABASES = &#123; &apos;default&apos;: &#123; &apos;ENGINE&apos;: &apos;django.db.backends.sqlite3&apos;, &apos;NAME&apos;: &apos;mydatabase&apos;, &#125;&#125; ``` ### sql DATABASES = { ‘default’: { ‘ENGINE’: ‘django.db.backends.postgresql’, ‘NAME’: ‘mydatabase’, ‘USER’: ‘mydatabaseuser’, ‘PASSWORD’: ‘mypassword’, ‘HOST’: ‘127.0.0.1’, ‘PORT’: ‘5432’, }}123456789101112131415161718192021222324252627282930313233343536373839### 自带app使用初始化 ``` py manage.py migrate``` ## 创建模型 ``` pythonfrom django.db import modelsclass Question(models.Model): question_text = models.CharField(max_length=200) pub_date = models.DateTimeField(&apos;date published&apos;)class Choice(models.Model): question = models.ForeignKey(Question, on_delete=models.CASCADE) choice_text = models.CharField(max_length=200) votes = models.IntegerField(default=0) ``` ![polls](/images/polls.jpg) ![polls_install](/images/polls_install.jpg) + django app全部是可插拔的，可以添加，发布，并不会绑定在单一的项目上 ### 执行数据迁移 ```pythonpy manage.py makemigrations polls ``` ![polls_migrations](/images/polls_migrations.jpg) ### 添加模型三步走 ``` 编辑 models.py 文件，改变模型。运行 python manage.py makemigrations 为模型的改变生成迁移文件。运行 python manage.py migrate 来应用数据库迁移。 ``` + 创建app 模型 + 模型改变生成迁移文件 + 执行数据库迁移 ## Django管理 ### 创建管理页面 py manage.py createsuperuser1### 登录管理 py manage.py runserver http://127.0.0.1:8000/admin/12345678### 添加投票应用 ```python # polls/admin.pyfrom django.contrib import adminfrom .models import Questionadmin.site.register(Question) 快捷函数render() 载入模板，填充上下文，再返回由它生成的 HttpResponse 对象」是一个非常常用的操作流程。于是 Django 提供了一个快捷函数，我们用它来重写 index() 视图 快捷函数get_object_or_404() 尝试用 get() 函数获取一个对象，如果不存在就抛出 Http404 错误也是一个普遍的流程。Django 也提供了一个快捷函数，下面是修改后的详情 detail() 视图代码;","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"conda environment","slug":"conda_env","date":"2018-12-28T03:25:00.000Z","updated":"2018-12-28T03:31:04.666Z","comments":true,"path":"2018/12/28/conda_env/","link":"","permalink":"https://dongzf.work/2018/12/28/conda_env/","excerpt":"","text":"conda environmentcreat ENV12345conda create --name snowflakes biopython ``` ## activate ENV ``` activate snowflaskes list ENV12345678conda info --envs ``` ## change ENV to the default ``` deactivate ``` ## Managing Python ### using different python version conda create –name snakes python=3.51234567### managing packages ``` conda search beautifulsoup4 ``` ### check installed in this environment ``` conda list","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"win10 python3.7+dlib","slug":"python_dlib","date":"2018-12-28T03:24:00.000Z","updated":"2018-12-28T03:31:04.666Z","comments":true,"path":"2018/12/28/python_dlib/","link":"","permalink":"https://dongzf.work/2018/12/28/python_dlib/","excerpt":"","text":"win10 python3.7+dlib 安装vs2017 需要选中C++桌面开发，以及python开发 安装vs2017完毕，需要添加cl.exe 环境变量 123456789101112131415C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64``` ![python_dlbi_cl_ENV](/images/python_dlbi_cl_ENV.png) 添加成功后，cmd输入cl如下 ![python_dlbi_cl_finish](/images/python_dlbi_cl_finish.png) 2. cmake安装 下载地址 ``` https://cmake.org/download/``` ![python_dlib_cmakeinstall](/images/python_dlib_cmakeinstall.png) 添加环境变量 ![python_dlib_cmake_env](/images/python_dlib_cmake_env.png) 3. 安装boost http://www.boost.org/下载boost`添加环境变量 安装dlib下载 dlib源码 http://dlib.net/files/安装完毕即可使用","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"openCV_study","slug":"python_openCV_study","date":"2018-12-28T03:23:00.000Z","updated":"2018-12-28T03:31:04.665Z","comments":true,"path":"2018/12/28/python_openCV_study/","link":"","permalink":"https://dongzf.work/2018/12/28/python_openCV_study/","excerpt":"","text":"[TOC] openCV study打包exe应用程序 pyinstaller yourprogram.py(go to your program’s directory and run) openCV 安装 安装指令 ‘pip install opencv-python’ 安装extra modules ‘pip install opencv-contrib-python’ openCV 调用1.’import cv2’ using openCVread img &amp;&amp; write img &amp;&amp; key process`python#!/usr/bin/python-- coding:utf-8 --import numpy as npimport cv2 as cv Load an color image in grayscaleimg = cv.imread(‘fam.jpg’,cv.IMREAD_GRAYSCALE) cv.imshow(‘fam’,img)cv.waitKey(0)cv.destroyAllWindows()cv.imwrite(‘fam_deal.png’, img)cv.namedWindow(‘fam’, cv.WINDOW_NORMAL)cv.imshow(‘fam’, img)cv.waitKey(0)cv.destroyAllWindows()cv.imshow(‘fam’, img)k = cv.waitKey(0) &amp; 0xFF # using a 64bit machine must be modifiedif k == 27: print(“即将退出”) cv.destroyAllWindows()elif k == ord(‘s’): print(“生成key.png图片，生成中……”) cv.imwrite(‘key.png’,img) cv.destroyAllWindows() ### Capture Video from Camera ```python #!/usr/bin/python # -*- coding:utf-8 -*- import numpy as np import cv2 as cv # Capture Video from Camera cap = cv.VideoCapture(0) while(True): ret, frame = cap.read() gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY) cv.imshow(&apos;frame&apos;, gray) if cv.waitKey(1) &amp; 0xFF == ord(&apos;q&apos;): break cap.release() cv.destroyAllWindows() play videocap = cv.VideoCapture('test.avi') while(cap.isOpened()): ret, frame = cap.read() gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY) cv.imshow('frame', gray) if cv.waitKey(1)&amp;0xFF == ord('q'): break cap.release() cv.destroyAllWindows() saving video#!/usr/bin/python # -*- coding:utf-8 -*- import numpy as np import cv2 as cv cap = cv.VideoCapture(0) #define the codec and creat VideoWriter object fourcc = cv.VideoWriter_fourcc(*'XVID') out = cv.VideoWriter('output.avi',fourcc,30.0,(640,480)) while(cap.isOpened()): ret, frame =cap.read() if ret == True: frame = cv.flip(frame,180) #write the flipped frame out.write(frame) cv.imshow('frame',frame) if cv.waitKey(1)&amp;0xFF == ord('q'): break else: break # Release everything if job is finished cap.release() out.release() cv.destroyAllWindows() 视频旋转cv2.flip(frame, 1)第一个参数表示要旋转的视频，第二个参数表示旋转的方向，0表示绕x轴旋转，大于0的数表示绕y轴旋转，小于0的负数表示绕x和y轴旋转 cv2.flip(frame, 0)会出现视频输出倒置 draw functions in OpenCV`python#!/usr/bin/python-- coding:utf-8 -- import numpy as npimport cv2 as cv #create c black imageimg = np.zeros((512,512,3),np.uint8) Draw a diagonal blue line with thickness of 5 pxcv.line(img,(0,0),(511,511),(0,255,0),5)cv.rectangle(img,(384,0),(510,128),(0,255,0),3)cv.circle(img,(447,63), 63, (0,0,255), -1)cv.ellipse(img,(256,256),(100,50),0,0,180,255,-1)pts = np.array([[10,5],[20,30],[70,20],[50,10]], np.int32)pts = pts.reshape((-1,1,2))cv.polylines(img,[pts],True,(0,255,255))font = cv.FONT_HERSHEY_SIMPLEXcv.putText(img,’董占峰’,(10,500), font, 4,(255,255,255),2,cv.LINE_AA) cv.imshow(‘fam’, img)k = cv.waitKey(0) &amp; 0xFF # using a 64bit machine must be modifiedif k == 27: print(“即将退出”) cv.destroyAllWindows()elif k == ord(‘s’): print(“生成key.png图片，生成中……”)cv.imwrite(‘drawing_test.png’,img)cv.destroyAllWindows() 1.支持中文需要有中文字体，使用PIL模块来支持，使用openCV无法支持 ### Trackbar as the Color Palette ```python #!/usr/bin/python # -*- coding:utf-8 -*- import numpy as np import cv2 as cv def nothing(x): pass # create trackbars for color change img = np.zeros((300,512,3),np.uint8) cv.namedWindow(&quot;image&quot;) # create trackbars for color change cv.createTrackbar(&apos;R&apos;,&apos;image&apos;,0,255,nothing) cv.createTrackbar(&apos;G&apos;,&apos;image&apos;,0,255,nothing) cv.createTrackbar(&apos;B&apos;,&apos;image&apos;,0,255,nothing) # create switch for ON/OFF functionality switch = &apos;0:OFF \\n1 : ON&apos; cv.createTrackbar(switch, &apos;image&apos;,0,1,nothing) while(1): cv.imshow(&apos;image&apos;,img) k = cv.waitKey(1)&amp;0xFF if k==27: break # get current positions of four trackbars r = cv.getTrackbarPos(&apos;R&apos;, &apos;image&apos;) g = cv.getTrackbarPos(&apos;G&apos;, &apos;image&apos;) b = cv.getTrackbarPos(&apos;B&apos;, &apos;image&apos;) s = cv.getTrackbarPos(switch, &apos;image&apos;) if s ==0: img[:] = 0 else: img[:] = [b,g,r] cv.destroyAllWindows()","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"openCV_光流探测","slug":"python_Optialflow","date":"2018-12-28T03:22:00.000Z","updated":"2018-12-28T03:31:04.665Z","comments":true,"path":"2018/12/28/python_Optialflow/","link":"","permalink":"https://dongzf.work/2018/12/28/python_Optialflow/","excerpt":"","text":"光流探测#!/usr/bin/python # -*- coding:utf-8 -*- import numpy as np import cv2 as cv cap = cv.VideoCapture(0) # params for ShiTomasi corner detection feature_params = dict( maxCorners = 100, qualityLevel = 0.3, minDistance = 7, blockSize = 7 ) # Parameters for lucas kanade optical flow lk_params = dict( winSize = (15,15), maxLevel = 2, criteria = (cv.TERM_CRITERIA_EPS | cv.TERM_CRITERIA_COUNT, 10, 0.03)) # Create some random colors color = np.random.randint(0,255,(100,3)) # Take first frame and find corners in it ret, old_frame = cap.read() old_gray = cv.cvtColor(old_frame, cv.COLOR_BGR2GRAY) p0 = cv.goodFeaturesToTrack(old_gray, mask = None, **feature_params) # Create a mask image for drawing purposes mask = np.zeros_like(old_frame) while(1): ret,frame = cap.read() frame_gray = cv.cvtColor(frame, cv.COLOR_BGR2GRAY) # calculate optical flow p1, st, err = cv.calcOpticalFlowPyrLK(old_gray, frame_gray, p0, None, **lk_params) # Select good points good_new = p1[st==1] good_old = p0[st==1] # draw the tracks for i,(new,old) in enumerate(zip(good_new,good_old)): a,b = new.ravel() c,d = old.ravel() mask = cv.line(mask, (a,b),(c,d), color[i].tolist(), 2) frame = cv.circle(frame,(a,b),5,color[i].tolist(),-1) img = cv.add(frame,mask) cv.imshow('frame',img) k = cv.waitKey(30) &amp; 0xff if k == 27: break # Now update the previous frame and previous points old_gray = frame_gray.copy() p0 = good_new.reshape(-1,1,2) cv.destroyAllWindows() cap.release()","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"import cv2 问题","slug":"python_study_ML","date":"2018-12-28T03:21:00.000Z","updated":"2018-12-28T03:25:50.085Z","comments":true,"path":"2018/12/28/python_study_ML/","link":"","permalink":"https://dongzf.work/2018/12/28/python_study_ML/","excerpt":"","text":"import cv2 问题12345pip3 install opencv-python ``` # image 图像转换 转换为数据保存txt文件时，需要调整字符大小，字体调小，并且默认字体很多都无法显示正常，推荐使用宋体 # 安装python skimage pkgs pip install scikit-image1# 安装并使用http requests pip install requests`","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"rtthread_定时器实现","slug":"rtthread_study","date":"2018-12-28T03:20:00.000Z","updated":"2018-12-28T03:26:41.537Z","comments":true,"path":"2018/12/28/rtthread_study/","link":"","permalink":"https://dongzf.work/2018/12/28/rtthread_study/","excerpt":"","text":"rtthread 定时实现RT-Thread 中，每个线程都内置一个定时器，当线程需要延时的时候， 则先将线程挂起，然后内置的定时器就会启动， 并且将定时器插入到一个全局的系统定时器列表rt_timer_list，这个全局的系统定时器列表维护着一条双向链表，每个节点代表了正在延时的线程的定时器，节点按照延时时间大小做升序排列。 当每次时基中断（SysTick 中断） 来临时， 就扫描系统定时器列表的第一个定时器， 看看延时时间是否到， 如果到则让该定时器对应的线程就绪， 如果延时时间不到， 则退出扫描， 因为定时器节点是按照延时时间升序排列的， 第一个定时器延时时间不到期的话， 那后面的定时器延时时间自然不到期。 比起第一种方法，这种方法就大大缩短了寻找延时到期的线程的时间 生成keil5 工程scons –target=mdk5","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-software","slug":"software","permalink":"https://dongzf.work/tags/software/"}]},{"title":"硬件-测试","slug":"硬件-测试","date":"2018-09-03T09:19:53.000Z","updated":"2018-09-03T09:26:32.219Z","comments":true,"path":"2018/09/03/硬件-测试/","link":"","permalink":"https://dongzf.work/2018/09/03/硬件-测试/","excerpt":"","text":"怎么看待测试 刚毕业那会就已经有测试工程是这个职位了，而且相对热门，但是软件测试工程师居多，很少会听到硬件测试工程师相关，或者对于刚毕业很少能接触到这块； 印象里，我就是从测试做起的，最开始跟着生产组，焊接，组装，功能测试，模拟测试；焊接0402封装焊接过不少，测试做过的更多，总之，刚开始会觉得没明白，怎么测，怎么焊，怎么弄，到慢慢熟悉了，再到开始麻木，机械式的重复…… 测试相比研发，要求更高。测试需要对这个设备，硬件，软件，业务都有深入的理解； 测试对于整个产品的量产，有着不可忽视的作用，测试能非常快速的提升产品的稳定性，产品功能上的缺陷； 测试怎么划分 电子产品测试大致如下：硬件测试 软件测试（电子产品终端固件）软件业务功能测试 产品测试 细说测试硬件测试 硬件测试包括，硬件参数的测试，例如以把标准的产品，一定会有相关的一些硬件参数，这些参数怎么来的呢？凑活的，从芯片厂家把拉过来，弄得亮一点，闪瞎大家的钛合金眼；也有的凭经验，根据理论值，来个小波动，心跳的感觉~~~ 当然也有会用专业仪器仪表，对每一项参数做测试，做产品我们是认真的！ 软件测试，这里的软件其实很多时候并不是正真客户使用的，尤其是嵌入式领域，他充当着更底层的角色，驱动硬件，原始数据收集，分析，等等，但是也是最关键，最重要的，稳定性需要有保障，数据需要更准确，这都依赖于此；例如简单的传感器采集，数据源是由传感器提供，但是如果确认传感器工作在其最好的状态，温湿度传感器确保表面空气流动正常很重要，温度探头尽量不要与其他金属由接触，等等，这些都是对数据源质量提升有效途径，需要软件测试不停的去采集数据，结合数据提出假设，调整硬件环境，不停的重复，知道数据最接近我们的真是环境； 软件功能测试其实很大程度上已经到业务层了，现在都提昌耦合度一定要低，但是有很多时候，底层软件和应用业务层，并不是能完全分离开，尤其是一些一体化方案，很多时候何在一起了；简单说把，一个蓝牙beacon，功能就是广播一段数据，经常承载的业务就是广播电量，标签ID等等，但是具体到细节，蓝牙部分可以作为底层，数据采集，可以作为底层部分，但是到了，电量显示，低电报警，rfid ID广播，这都是到业务层面，这些都跟产品业务息息相关，电量采集不准，读取有问题，都会导致一些列连锁反应，无法确认beacon是否需要更换电池，客户无法非常效率的维护产品等等，软件功能测试，关系这产品业务的命脉，功能是否合理，功能是否精准，功能是否有学习成本随着时间的推移，已经成为了一个产品的衡量标杆； 产品测试是一个全面的测试，除了以上的，还多了很多其他很重要的指标，ip等级测试，emc电磁兼容测试，高低温测试，相关应用场景模拟测试，尤其是强干扰源环境测试等等，都是一个产品走向成功的必经途径！题外话，关系，渠道也很重要，产品不完善，不够好，关系，渠道来凑，也是现今市场推崇的，但是作为一个硬件人，一个产品定义者，你心里能没点数码？","categories":[{"name":"hardware","slug":"hardware","permalink":"https://dongzf.work/categories/hardware/"}],"tags":[{"name":"-product","slug":"product","permalink":"https://dongzf.work/tags/product/"}]},{"title":"硬件-研发与量产","slug":"硬件-研发与量产","date":"2018-08-31T02:19:53.000Z","updated":"2018-09-03T07:41:40.912Z","comments":true,"path":"2018/08/31/硬件-研发与量产/","link":"","permalink":"https://dongzf.work/2018/08/31/硬件-研发与量产/","excerpt":"","text":"硬件设计认知硬件设计要考虑哪些方面 硬件设计——对设计实现做出合理评估很重要优秀的设计师拿到需求，随着对功能的需求的理解，产品雏形已经在脑海里形成；更优秀的设计师在拿到需求的时候，随着对功能需求的理解，不断的提出质疑，肯定，否定，再肯定，再否定，产品雏形在脑海里不断碎了重建，重建了又碎；大师级设计师拿到需求，已经不关注某一个需求，某一个点了，脑袋里已经在不停的构建一个产品的生命周期！这是我的理解，也是我的目标！ 硬件设计——成本我们没法绕开，随着互联网+ 它也在不停的变化很多产品经理，都是先把功能实现了，需求满足了，我们再考虑成本！成本，到底该怎么定义，怎么理解？随着硬件软件越来越模糊，结合点越来越多，成本已经不再是纯物料成本可以衡量评估的了：1 硬件物料成本;2 产品组装成本；3 产品维护成本；以前玩硬件的，都是物料成本是重头戏，现在呢，人力成本的上升不仅对设计提出了高要求，设计要更加自动化，尽量避免过多人力干预；更多的是，人力成本对公司来说已经不可忽视！ 硬件设计——量产的锅也得背曾几何时，研发和生产还时分离的：研发经常会收到生产发来的邮件“这个贴片BOM里有，器件位置图叉掉了，哪个是对的”“制版厂让我问你你那个pcb好像有usb，但是没说是否做阻抗控制，尽快确认，要不会延期”诸如此类，邮件满天飞12同样生产也会收到很多研发的邮件&quot;有个器件忘了，机贴完了，安排补焊下!&quot; &quot;这个物料有替料，不带固定柱，重新采购个&quot; &quot;这个地方有禁区，神马情况，没听说啊&quot;回想起来，保守估计，有一万只草泥马飘过 现在，当下，未来：量产时目标，也是责任！作为设计，第一批次小样，一定要去跟生产的，只有这样你才知道你的器件是否摆放合理，你的器件布局是否有干扰，你的走线是否加工有难度，不一定要去现场，但是必要的沟通是一定要有的！第一批试样组装，一定要去秀一下，只有这样，你才能取做优化调整，你的东西才能离量产更近！硬件设计，画图纸，已经并非最重要的，越来越开源，越来越多的优秀设计你可以拿来用，更多的你得关注量产，关注成本，关注体验！纳尼？这不是产品经理要做的吗？不然，做与不做在你，而你与量产的距离渐行渐远，这个行业与你的距离也已肉眼不可见了123456789* 硬件设计——你也得有软的时候物联网，互联网+ 越来越多的新鲜词，带来的是便利，但是也是融合，硬件设计也得考虑软体！物联网设备越来越普遍，一个简单的模型，传感器+广域网通讯+平台，这里到底有多少坑，有多少要从设计就开始规避的，有多少要优化调整来给量产铺路的？很多，很杂；很多细节；软件，硬件，平台，乱七八糟，都得考虑；界限模糊了，不要求你一气呵成写代码，但是开始尝试着去理解它吧，你会发现你的设计再不知不觉中已经在优化改进了，硬件的设计更加贴合应用层开发，万物互联，你能抓住硬件通往软件的捷径就是胜利！同样的设计，同样的物联网模型，有的出来了，各种平台兼容，各种秀，有的出来了~~~~“什么，要接入其他平台，没问题，就是硬件固件得更新”，也有的出来了是这样的“大概量产后200软妹币吧，实际可能有偏差，但是浮动不大”“什么！隔壁家的怎么不到150，再看看，看看是不是哪里跟人家不一样”别人家的一定是最好的，但是你也得有成为别人眼里的“别家”的心！## 设计到量产——那么远，又那么近！诚然，设计到量产的时间轴很长，但是你的设计就是为了量产，你的设计每一个点都是在为量产铺路，是羊肠小径，还是康庄大道？回到起点，你设计的开始，量产就已经在演变了 做设计——我是认真的！","categories":[{"name":"hardware","slug":"hardware","permalink":"https://dongzf.work/categories/hardware/"}],"tags":[{"name":"-product","slug":"product","permalink":"https://dongzf.work/tags/product/"}]},{"title":"硬件-认识生产文件","slug":"硬件-认识生产文件","date":"2018-08-29T02:19:53.000Z","updated":"2018-08-29T07:18:01.562Z","comments":true,"path":"2018/08/29/硬件-认识生产文件/","link":"","permalink":"https://dongzf.work/2018/08/29/硬件-认识生产文件/","excerpt":"","text":"硬件生产认识生产文件硬件设计文件硬件PCB加工文件 提供给制版厂用于生产裸板 PCB光绘文件gerber； 光绘文件由硬件设计提供，是制版厂加工电路板的核心文件 pcb工艺说明； 工艺要求主要是用来指导制版厂如何加工，例如板厚，绿油颜色等等相关加工参数说明 特殊走线说明; 硬件设计尤其是高速设计都需要遵循硬件标准规范，例如usb走线要做90欧姆阻抗控制等等 加工要求； 该批次生产数量，拼板要求等等非标准类需求 硬件PCBA加工文件 提供给贴片厂用于生产PCBA PCB裸板； 制版厂提供 钢网文件； 制版厂提供 ,钢网开孔，上锡 物料采购BOM; 硬件设计提供，用于采购物料，成本评估等等 贴片BOM； 硬件设计提供，非常重要，这是贴片厂 加工pcba的唯一参考，物料是否贴片严格按照次文件执行，一旦出问题，贴片完成后很难补救 器件位置图； 贴片厂参考文件，由硬件设计提供，用于判断器件方向，位置，文件提供了详细的贴片物料位号 坐标文件； 硬件设计提供，机贴核心文件，这个决定了每一个元器件摆放位置 出厂固件（芯片程序）； 软件提供，这个用于贴片完成，功能测试，等 程序烧录说明以及相关烧录工具（软件）； 硬件提供，用于给电路板烧录程序 PCBA烧录工装使用说明； 烧录程序指导说明，硬件设计提供，方便制版厂相关工作人员熟悉操作，烧录指导 PCBA烧录工装（程序烧录）； PCBA检测工具使用说明，标准； 硬件设计提供，用于出厂检测 PCBA检测工具（功能测试）； 硬件设计提供，相关人员依照使用说明，检测是否合格使用的工具等 产品加工文件 提供给组装厂用于产品组装 产品组装BOM（后线组装BOM）； 完整产品组装的后线bom，此时pcba仅作为产品bom的一个部件 sop文件（标准作业流程）; 流水线作业，产品组装的相关流程 产品功能测试老化测试说明； 硬件设计提供，根据说明，对组装完成的产品做老化测试，出厂测试等","categories":[{"name":"hardware","slug":"hardware","permalink":"https://dongzf.work/categories/hardware/"}],"tags":[{"name":"-product","slug":"product","permalink":"https://dongzf.work/tags/product/"}]},{"title":"Linux-arm-c-移位置位","slug":"Linux-arm-c-移位置位","date":"2018-08-20T07:04:21.000Z","updated":"2018-08-20T07:17:47.194Z","comments":true,"path":"2018/08/20/Linux-arm-c-移位置位/","link":"","permalink":"https://dongzf.work/2018/08/20/Linux-arm-c-移位置位/","excerpt":"","text":"嵌入式Linux C 中置位操作12#define setbit(x,y) x|=(1&lt;&lt;y) //将X的Y位置置1#define clrbit(x,y) x&amp;=~(1&lt;&lt;y) //将X的Y位置置0 移位乘法 十六进制的两个字节数据0x02 0x06 按照两位数读取，此时需要移位0x02至十位 最终值为26，具体操作如下 1(data[25]&lt;&lt;8)|data[26] )","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"--Linux_ARM-C","slug":"Linux-ARM-C","permalink":"https://dongzf.work/tags/Linux-ARM-C/"}]},{"title":"work_plan","slug":"work-plan","date":"2018-08-20T03:31:53.000Z","updated":"2018-08-20T10:34:22.741Z","comments":true,"path":"2018/08/20/work-plan/","link":"","permalink":"https://dongzf.work/2018/08/20/work-plan/","excerpt":"","text":"plan 闸机结构、外观调整改进（测试版，量产版 2个月）； 机顶盒外观确认，打样（两个版本1个半月）； 机顶盒调试，测试（配合软件调试 长期）； 量产调试，修改，生产文件确认； 标签优化改进问题跟进; 工地宝优化改进（现有问题，确认，运营中的使用情况等等，记录不准确，等等问题） 标签id号段管理，以及超高频卡管理；","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-design","slug":"design","permalink":"https://dongzf.work/tags/design/"}]},{"title":"小产品说","slug":"小产品说","date":"2018-08-17T08:20:00.000Z","updated":"2018-08-17T08:52:04.483Z","comments":true,"path":"2018/08/17/小产品说/","link":"","permalink":"https://dongzf.work/2018/08/17/小产品说/","excerpt":"","text":"如果产品设计选择三个重要point产品设计需要考虑的非常多，考虑的的全面，精准很重要，那么如果只选择三个，会时什么的？非常主观的说下：产品设计要考虑量产都说手工的更珍贵，但是在电子产品泛滥的今天，成本，价格都越来越透明，服务凸显，设计是否能量产，具备量产条件，减少人工，越来越重要，不挑代工厂，越来越重哎哟；产品设计要考虑供货设计一款产品，电子物料的交期，生产周期，越来越重要，同样的功能，方案很多，选择很多，选择供货稳定的，性价比高的，这将会是产品制胜的关键产品设计要考虑可持续性产品的层次，迭代，可持续性，很重要，一个产品停止不前，或者后续服务衍生为零，就是一票买卖","categories":[{"name":"product","slug":"product","permalink":"https://dongzf.work/categories/product/"}],"tags":[{"name":"-design","slug":"design","permalink":"https://dongzf.work/tags/design/"}]},{"title":"SUB1Ghz-芯片选型","slug":"SUB1Ghz-芯片选型","date":"2018-08-09T02:16:53.000Z","updated":"2018-08-29T02:18:07.872Z","comments":true,"path":"2018/08/09/SUB1Ghz-芯片选型/","link":"","permalink":"https://dongzf.work/2018/08/09/SUB1Ghz-芯片选型/","excerpt":"","text":"Sub 1Ghz RF 型号 尺寸 价格 接口 vcc tx rx cc1101 4x4 spi 1.8-3.6V 27ma@10dbm 15ma@38.4kbaud si4463 4x4 spi 1.8-3.6V 18ma@10dbm 13ma si4432 4x4 spi 1.8-3.6V 30ma@13dbm 18.5ma nrf905 5x5 spi 1.9-3.6V 9ma@-10dbm 12.5ma","categories":[{"name":"hardware","slug":"hardware","permalink":"https://dongzf.work/categories/hardware/"}],"tags":[{"name":"-chip-selected","slug":"chip-selected","permalink":"https://dongzf.work/tags/chip-selected/"}]},{"title":"BLE_ST-beacon广播数据说","slug":"BLE_ST-beacon广播数据说","date":"2018-08-03T07:11:00.000Z","updated":"2018-08-03T07:20:05.981Z","comments":true,"path":"2018/08/03/BLE_ST-beacon广播数据说/","link":"","permalink":"https://dongzf.work/2018/08/03/BLE_ST-beacon广播数据说/","excerpt":"","text":"12345678910111213141516171819202122 uint8_t adv_data[] = &#123; /* Advertising data: Flags AD Type */ 0x02, 0x01, 0x06, /* Advertising data: manufacturer specific data */ 26, //len AD_TYPE_MANUFACTURER_SPECIFIC_DATA, //manufacturer type 0x4C, 0x00, //Company identifier code (Default is 0x0030 - STMicroelectronics: To be customized for specific identifier) 0x02, // ID 0x15, //Length of the remaining payload 0xFD, 0xA5, 0x06, 0x93, 0xA4, 0xE2, 0x4F, 0xB1, 0xAF, 0xCF, 0xC6, 0xEB, 0x07, 0x64, 0x78, 0x25, //Device UUID (16 Bytes) // 0x01, 0x02, // Major number // 0x01, 0x02, // Minor number /*Major Value (2 Bytes)*/ HI_FOUR_UINT8(DEFAULT_BATVAL) | DEFAULT_HI_MAJOR_UINT16, DEFAULT_LO_MAJOR_UINT16, /*Minor Value (2 Bytes)*/ DEFAULT_HI_MINOR_UINT16, DEFAULT_LO_MINOR_UINT16, 0xC8 //2&apos;s complement of the Tx power (-56dB)&#125;; &#125; 广播数据中默认是0x30 0x00这个是company identifier code ，st默认是0x30 ，但是一般app再扫描广播数据时都会解析此处，由于此处涉及公司非常多，每家都不一样，因为很多app 都是针对自己所使用的来做解析业务，因此，如果再调试beacon中，使用了第三方现成的app来做测试，很有可能会出现有的app能被扫描到，有的app扫描不到的问题，一度怀疑硬件设计问题，甚至是beacon的兼容性问题；的确是兼容性问题导致，很多app搜索不到，这里处理方式也非常简单暴力，改成苹果公司的，0x40， 0x00~","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-BLE","slug":"BLE","permalink":"https://dongzf.work/tags/BLE/"}]},{"title":"BLE_ST-beacont调试防止进入深度睡眠","slug":"BLE_ST-beacon调试防止进入深度睡眠","date":"2018-07-27T08:20:00.000Z","updated":"2018-07-27T08:35:23.425Z","comments":true,"path":"2018/07/27/BLE_ST-beacon调试防止进入深度睡眠/","link":"","permalink":"https://dongzf.work/2018/07/27/BLE_ST-beacon调试防止进入深度睡眠/","excerpt":"","text":"蓝牙调试防止进入深度睡眠在蓝牙调试的时候，如果不关闭睡眠，烧录程序后，一旦beacon进入睡眠，此时jtag将无法使用，此芯片则无法再次通过jtag烧录程序测试，只能通过bootloader来烧录调整；更改函数：1static void BlueNRG_InternalSleep(SleepModes sleepMode, uint8_t gpioWakeBitMask) 更改内容：1SystemSleepCmd(DISABLE); 如下图所示","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-BLE","slug":"BLE","permalink":"https://dongzf.work/tags/BLE/"}]},{"title":"BLE_ST-beacon串口中断收发","slug":"BLE_ST-beacon串口中断收发","date":"2018-07-27T07:55:00.000Z","updated":"2018-07-27T08:44:52.408Z","comments":true,"path":"2018/07/27/BLE_ST-beacon串口中断收发/","link":"","permalink":"https://dongzf.work/2018/07/27/BLE_ST-beacon串口中断收发/","excerpt":"","text":"添加串口中断请求1void SdkEvalComUartIrqConfig(FunctionalState EnableIrq) 添加中断接收处理函数文件：BlueNRG1_it.c1234567891011void UART_Handler(void)&#123; if (UART_GetITStatus(UART_IT_RX) != RESET) &#123; /* Clear the interrupt */ UART_ClearITPendingBit(UART_IT_RX); /* Echo of received data */ UART_SendData((UART_ReceiveData() &amp; 0xFF)); &#125;&#125; 此函数实现功能为，收到数据，立即通过串口发送出去","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-BLE","slug":"BLE","permalink":"https://dongzf.work/tags/BLE/"}]},{"title":"BLE_ST-beacon更新设备名称","slug":"BLE_ST-beacon更新设备名称","date":"2018-07-27T07:49:06.000Z","updated":"2018-07-27T08:10:06.690Z","comments":true,"path":"2018/07/27/BLE_ST-beacon更新设备名称/","link":"","permalink":"https://dongzf.work/2018/07/27/BLE_ST-beacon更新设备名称/","excerpt":"","text":"设备：blueNRG-132SDK： 更改对象：BLE_Beacon_main.c 更改函数: 1void Device_Init(void) 添加内容如下 12345/* Update device name */ret = aci_gatt_update_char_value_ext(0, service_handle, dev_name_char_handle, 0,sizeof(device_name), 0, sizeof(device_name), device_name);if(ret != BLE_STATUS_SUCCESS) &#123; printf(&quot;aci_gatt_update_char_value_ext() failed: 0x%02x\\r\\n&quot;, ret);&#125; 更改函数： 1static void Start_Beaconing(void) 添加内容： 1uint8_t local_name[] = &#123;AD_TYPE_COMPLETE_LOCAL_NAME,&apos;B&apos;,&apos;l&apos;,&apos;u&apos;,&apos;e&apos;,&apos;N&apos;,&apos;R&apos;,&apos;G&apos;&#125;; 12/* put device in non connectable mode */ret = aci_gap_set_discoverable(ADV_NONCONN_IND, 160, 160, PUBLIC_ADDR, NO_WHITE_LIST_USE, sizeof(local_name), local_name, 0, NULL, 0, 0); 更改宏定义 1#define ENABLE_FLAGS_AD_TYPE_AT_BEGINNING 0","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-BLE","slug":"BLE","permalink":"https://dongzf.work/tags/BLE/"}]},{"title":"ARM_LINUX-BOA配置文件说明","slug":"Linux-arm-boa配置文件说明","date":"2018-07-18T07:49:06.000Z","updated":"2018-07-19T00:01:09.061Z","comments":true,"path":"2018/07/18/Linux-arm-boa配置文件说明/","link":"","permalink":"https://dongzf.work/2018/07/18/Linux-arm-boa配置文件说明/","excerpt":"","text":"1234567891011121314151617Port 80User rootGroup rootErrorLog /dev/consoleAccessLog /dev/nullServerName friendly-armDocumentRoot /pqm/www/test/DirectoryIndex rtd.htmlKeepAliveMax 1000KeepAliveTimeout 10MimeTypes /etc/mime.typesDefaultType text/plainCGIPath /sbin:/usr/sbin:/bin:/usr/binAddType application/x-httpd-cgi cgiScriptAlias /cgi-bin/ /pqm/www/cgi-bin/ScriptAlias /test/cgi-bin/ /pqm/www/test/cgi-bin/SinglePostLimit 52428800 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#监听的端口号，缺省都是80，一般无需修改Port 80# bind 调用的IP 地址，一般注释掉，表明绑定到INADDR_ANY，通配于服务器的所有IP 地址#Listen 192.68.0.5#作为哪个用户运行，即它拥有该用户的权限，一般都是nobody，需要/etc/passwd 中有#nobody 用户User nobody#作为哪个用户组运行，即它拥有该用户组的权限，一般都是nogroup，需要在/etc/group 文#件中有nogroup 组Group nogroup#当服务器发生问题时发送报警的email 地址，目前未用，注释掉#ServerAdmin root@localhost#错误日志文件。如果没有以/开始，则表示从服务器的根路径开始。如果不需要错误日志，则用#/dev/null。在下面设置时，注意一定要建立/var/log/boa 目录ErrorLog /var/log/boa/error_log#访问日志文件。如果没有以/开始，则表示从服务器的根路径开始。如果不需要错误日志，则用#/dev/null 或直接注释掉。在下面设置时，注意一定要建立/var/log/boa 目录#AccessLog /var/log/boa/access_log#是否使用本地时间。如果没有注释掉，则使用本地时间。注释掉则使用UTC 时间#UseLocaltime#是否记录CGI 运行信息，如果没有注释掉，则记录，注释掉则不记录#VerboseCGILogs#服务器名字ServerName www.hyesco.com#是否启动虚拟主机功能，即设备可以有多个网络接口，每个接口都可以拥有一个虚拟的Web 服#务器。一般注释掉，即不需要启动#VirtualHost#非常重要，HTML 文档的主目录。如果没有以/开始，则表示从服务器的根路径开始。DocumentRoot /var/www#如果收到一个用户请求的话，在用户主目录后再增加的目录名UserDir public_html#HTML 目录索引的文件名，也是没有用户只指明访问目录时返回的文件名DirectoryIndex index.html#当HTML 目录没有索引文件时，用户只指明访问目录时，boa 会调用该程序生成索引文件然后#返回给用户，因为该过程比较慢最好不执行，可以注释掉或者给每个HTML 目录加上#DirectoryIndex 指明的文件#DirectoryMaker /usr/lib/boa/boa_indexer#如果DirectoryIndex 不存在，并且DirectoryMaker 被注释，那么就用Boa 自带的索引#生成程序来生成目录的索引文件并输出到下面目录，该目录必须是Boa 能读写# DirectoryCache /var/spool/boa/dircache#一个连接所允许的HTTP 持续作用请求最大数目，注释或设为0 都将关闭HTTP 持续作用KeepAliveMax 1000#HTTP 持续作用中服务器在两次请求之间等待的时间数，以秒为单位，超时将关闭连接KeepAliveTimeout 10#指明mime.types 文件位置。如果没有以/开始，则表示从服务器的根路径开始。可以注释掉#避免使用mime.types 文件，此时需要用AddType 在本文件里指明MimeTypes /etc/mime.types#文件扩展名没有或未知的话，使用的缺省MIME 类型DefaultType text/plain#提供CGI 程序的PATH 环境变量值CGIPath /bin:/usr/bin:/usr/local/bin#将文件扩展名和MIME 类型关联起来，和mime.types 文件作用一样。如果用mime.types#文件，则注释掉，如果不使用mime.types 文件，则必须使用#AddType application/x-httpd-cgi cgi#指明文档重定向路径#Redirect /bar http://elsewhere/feh/bar#为路径加上别名Alias /doc /usr/doc#非常重要，指明CGI 脚本的虚拟路径对应的实际路径。一般所有的CGI 脚本都要放在实际路径#里，用户访问执行时输入站点+虚拟路径+CGI 脚本名ScriptAlias /cgi-bin/ /var/www/cgi-bin/","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-Linux_ARM","slug":"Linux-ARM","permalink":"https://dongzf.work/tags/Linux-ARM/"}]},{"title":"ARM_LINUX-以太网调试","slug":"arm_linux-以太网调试","date":"2018-07-11T07:49:06.000Z","updated":"2018-07-18T02:18:51.374Z","comments":true,"path":"2018/07/11/arm_linux-以太网调试/","link":"","permalink":"https://dongzf.work/2018/07/11/arm_linux-以太网调试/","excerpt":"","text":"ARM_LINUX-以太网调试 windows 添加telnet 服务； 启动arm板以太网ifconfig eth0 up2.1 关闭以太网 ifconfig eth0 down 配置以太网IP地址 ifconfig eth0 192.168.1.116 链接网线，使用telnet 连接arm开发板","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-Linux_ARM","slug":"Linux-ARM","permalink":"https://dongzf.work/tags/Linux-ARM/"}]},{"title":"硬解HIFI","slug":"instant-HIFI","date":"2018-07-11T07:49:06.000Z","updated":"2018-07-11T08:08:10.066Z","comments":true,"path":"2018/07/11/instant-HIFI/","link":"","permalink":"https://dongzf.work/2018/07/11/instant-HIFI/","excerpt":"","text":"生命在于折腾~~~~","categories":[{"name":"instant","slug":"instant","permalink":"https://dongzf.work/categories/instant/"}],"tags":[{"name":"-wonderful work","slug":"wonderful-work","permalink":"https://dongzf.work/tags/wonderful-work/"}]},{"title":"MediaBrake_issue","slug":"MediaBrake-issue","date":"2018-07-11T03:31:07.000Z","updated":"2018-07-24T01:17:28.820Z","comments":true,"path":"2018/07/11/MediaBrake-issue/","link":"","permalink":"https://dongzf.work/2018/07/11/MediaBrake-issue/","excerpt":"","text":"PCBA:MediaBrake_8F9B000002 D31 D32 稳压二极管方向表示有误 整流二极管D2 D3 D13 仅D2需要导通压降大于0.7V，其余均需要导通压降越小越好 X3丝印没有标注方向 R73阻值错误BOM物料为12Ω 1% 实际应该是12K 1% 功率电感L1瞬间电流，稳态电流太小，需要调整 音频输入左声道，右声道，走线加粗，负责无法驱动功率较大的喇叭 耳机孔1号引脚接地 R49为内部RTC电路，NC BOM L2 L10 L14 其中L2为功率电感，非0402封装；L10 L14也是功率电感，但是目前BOM中全部按照0402做了处理，需要做调整 J4 MicroUSB datasheet 与PCB封装不吻合，需要更新，与PCB封装对应，PCB封装为四腿不带固定住卷边MicroUSB TF卡，位号U21 9PIn带固定柱，但是固定柱只做了丝印标识，再实际生产文件中未作开孔处理，并且目前信号定义是按照SD卡定义，下次需要把信号接口定义改为TF卡座接口定义，目前TF功能暂时无法使用 拨码开关P10是没有方向器件，下一版统一规定，再丝印上做方向标识 按键K1 K2 K3 K5 引脚线序与实际的按键没有对应，导致按键一直处于按下状态，下一版做调整，目前不影响测试，使用 在接口面板增加丝印标识 下一版电源做调整，扩展接口的5V 3.3V 以及UHF的3.3V，单独使用MP1584 提供5V3A通路，防止再负载过多的情况下，造成欠压 CON5闸机接口的焊盘开孔直径增加至1.45mm 位号C9 目前位置有点挤压旁边的0402封装的电容，需要下一次做布局调整 U20 MICRO SIM CARD连接器，提供物料型号略大，下次更新BOM物料型号，并且备注参考链接 MINIPCIE座以及支架均带定位柱，需要再下一版确认物料型号，更新PCB封装 U9PCB封装略微大，可以用，但是下一版本做调整，将器封装重新更新 C117 器件位置摆放没有对齐，下次做调整 AUIDO I2C1 上拉电阻没有没用加上，与核心板添加的上啦电阻混淆了，下一版本增加，后续设计，是否需要上拉电阻，均再设计是预留上拉位置 SIM卡座需要靠里，避免与结构干涉 模组再丝印层增加标注方向，方便安装","categories":[{"name":"hardware","slug":"hardware","permalink":"https://dongzf.work/categories/hardware/"}],"tags":[{"name":"-sch&pcb","slug":"sch-pcb","permalink":"https://dongzf.work/tags/sch-pcb/"}]},{"title":"Linux-arm-sqlite3移植","slug":"Linux-arm-sqlite3移植","date":"2018-07-02T06:39:29.000Z","updated":"2018-07-11T05:37:29.192Z","comments":true,"path":"2018/07/02/Linux-arm-sqlite3移植/","link":"","permalink":"https://dongzf.work/2018/07/02/Linux-arm-sqlite3移植/","excerpt":"","text":"下载sqlite3 解压sqlite3 1tar -xzvf sqlite-autoconf-3240000 进入解压目录 1cd sqlite-autoconf-3240000/ 配置1./configure --prefix=/root/sqlite3 --target=arm-fsl-linux-gnueabi --host=arm-fsl-linux-gnueabi 查询ARM编译器版本 1arm-linux-gcc -v 查询版本后可知道 target=arm-fsl-linux-gnueabi编译安装1make&amp;&amp;make install test 文件测试 1arm-linux-gcc -I/root/sqlite3/include -L/root/sqlite3/lib -lsqlite3 test.c -o test 依赖库添加不指定头文件库路径，会提是无法找到头文件，此时需要将依赖库，放到默认检索目录，依次如下查询编译器依赖库路径 1echo &apos;main()&#123;&#125;&apos;|arm-linux-gcc -E -v – 按照默认路径，一次把需要文件放入 opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/lib/gcc/arm-fsl-linux-gnueabi/4.6.2 /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin /opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/lib/gcc/arm-fsl-linux-gnueabi/4.6.2/include","categories":[{"name":"software","slug":"software","permalink":"https://dongzf.work/categories/software/"}],"tags":[{"name":"-Linux_ARM","slug":"Linux-ARM","permalink":"https://dongzf.work/tags/Linux-ARM/"}]}]}